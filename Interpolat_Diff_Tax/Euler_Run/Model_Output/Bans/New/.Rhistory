for(i in unique(win_res_trans$scen)) {
data <- win_res_trans[win_res_trans$scen == i,1:15]
prop_win_res <- data.frame("Resistance" = colSums(data)/nrow(data),
"Interventions" = as.factor(c("FT", "ST (HR)", "ST (MR1)","ST (MR2)",
"ST (LR)",
"DT (1Rd)", "DT (2Rd)",
"DT (3Rd)", "DT (4Rd)",
"DT (5Rd)", "DT (6Rd)",
"Ban (HR)", "Ban (MR1)","Ban (MR2)", "Ban (LR)")))
prop_win_res$Interventions <- factor(prop_win_res$Interventions, levels = c(prop_win_res$Interventions))
prop_win_res$scen <- i
res_frame <- rbind(res_frame, prop_win_res)
}
res_frame$scen <- factor(res_frame$scen, levels = rev(unique(res_frame$scen)))
res_frame$factor <- c(rep("Baseline", 15), rep("Other", 6*15))
res_frame$factor <- factor(res_frame$factor, levels = unique(res_frame$factor))
res_frame$Int <- as.factor(rep(c(rep("Tax", 11),rep("Bans", 4)), 7))
res_frame$Int <- factor(res_frame$Int, levels = unique(res_frame$Int))
res_plot <- ggplot(res_frame, aes(Interventions, scen)) + theme_bw() +
geom_tile(aes(fill = Resistance)) + scale_fill_distiller(palette ="Blues", direction = 1) +
facet_grid(factor~ Int, scales  = "free", space = "free") +
scale_x_discrete(name = "", expand = c(0, 0)) +  ggtitle("Average Resistance") +
theme(strip.background = element_blank(), axis.text=element_text(size=11),
plot.title = element_text(face = "bold", size = 15),
strip.text = element_blank(), legend.position="bottom",
axis.text.x =element_text(angle = 0, hjust=0.5)) +
scale_y_discrete(name = "", expand = c(0, 0)) +
guides(fill = guide_colorbar(title = "Probability that Intervention Wins",
label.position = "bottom",
title.position = "left", title.vjust = 1,
# draw border around the legend
frame.colour = "black",
barwidth = 10,
barheight = 1))
# Average Antibiotics Available -------------------------------------------
win_avganti <- round((comb_imp[,46:60]), 5)
win_avganti$scen <- comb_imp[, 61]
win_avganti$rowsum <- rowSums(win_avganti[,-16], na.rm = T)
win_avganti <- win_avganti[win_avganti$rowsum!=0,]; scen_remov <- win_avganti[,16]
win_avganti <- win_avganti[,-c(16:17)]
win_avganti_trans <- t(apply(win_avganti, 1, function(x) {
val = max(x, na.rm = T)
x[x != val] <- 0
x[x == val] <- 1
return(x)}
))
win_avganti_trans <- data.frame(win_avganti_trans); win_avganti_trans$scen <- scen_remov
avganti_frame <- data.frame(matrix(NA, nrow = 0, ncol = 15))
for(i in unique(win_avganti_trans$scen)) {
data <- win_avganti_trans[win_avganti_trans$scen == i,1:15]
prop_win_avganti <- data.frame("AverageAnti" = colSums(data)/nrow(data),
"Interventions" = as.factor(c("FT", "ST (HR)", "ST (MR1)","ST (MR2)",
"ST (LR)",
"DT (1Rd)", "DT (2Rd)",
"DT (3Rd)", "DT (4Rd)",
"DT (5Rd)", "DT (6Rd)",
"Ban (HR)", "Ban (MR1)","Ban (MR2)", "Ban (LR)")))
prop_win_avganti$Interventions <- factor(prop_win_avganti$Interventions, levels = c(prop_win_avganti$Interventions))
prop_win_avganti$scen <- i
avganti_frame <- rbind(avganti_frame, prop_win_avganti)
}
avganti_frame$scen <- factor(avganti_frame$scen, levels = rev(unique(avganti_frame$scen)))
avganti_frame$factor <- c(rep("Baseline", 15), rep("Other", 15*6))
avganti_frame$factor <- factor(avganti_frame$factor, levels = unique(avganti_frame$factor))
avganti_frame$Int <- as.factor(rep(c(rep("Tax", 11),rep("Bans", 4)), 7))
avganti_frame$Int <- factor(avganti_frame$Int, levels = unique(avganti_frame$Int))
avg_anti_plot <- ggplot(avganti_frame, aes(Interventions, scen)) + theme_bw() +
geom_tile(aes(fill = AverageAnti)) + scale_fill_distiller(palette ="Blues", direction = 1) +
facet_grid(factor~ Int, scales  = "free", space = "free") +
scale_x_discrete(name = "", expand = c(0, 0))  +  ggtitle("Average Antibiotics Available") +
theme(strip.background = element_blank(), axis.text=element_text(size=11),
strip.text = element_blank(), legend.position="bottom",
plot.title = element_text(face = "bold", size = 15),
axis.text.x = element_text(angle = 0, hjust=0.5)) +
scale_y_discrete(name = "", expand = c(0, 0)) +
guides(fill = guide_colorbar(title = "Probability that Intervention Wins",
label.position = "bottom",
title.position = "left", title.vjust = 1,
# draw border around the legend
frame.colour = "black",
barwidth = 10,
barheight = 1))
# Intervention Failure Plot  ----------------------------------------------
int_failure <- comb_imp[,c(16:30,61)]
prop_vec <- data.frame("intervention" = as.factor(rep(colnames(int_failure)[-16], 7)),
"prop_inc" = NA,
"scen" = NA)
for(z in 1:7) {
win_import <- int_failure[int_failure$scen == unique(int_failure$scen)[z],-16]
for(i in 1:15) {
prop_1000 <- win_import[,i]
prop_vec[i+(15*(z-1)),2] <- length(prop_1000[prop_1000 == -1000])/sum(!is.na(prop_1000))
prop_vec[i+(15*(z-1)),3] <- c("Baseline", "Case Study", "Severe", "25% Thresh", "75% Thresh", "Two Classes", "Four Classes")[z]
}
}
prop_vec$intervention <- rep(c("FT", "ST (HR)", "ST (MR1)","ST (MR2)",
"ST (LR)",
"DT (1Rd)", "DT (2Rd)",
"DT (3Rd)", "DT (4Rd)",
"DT (5Rd)", "DT (6Rd)",
"Ban (HR)", "Ban (MR1)","Ban (MR2)", "Ban (LR)"), 7)
prop_vec$intervention <- factor(prop_vec$intervention, levels = unique(prop_vec$intervention))
prop_vec$factor <- c(rep("Baseline", 15), rep("Other", 15*6))
prop_vec$factor <- factor(prop_vec$factor, levels = unique(prop_vec$factor))
prop_vec$Int <- as.factor(rep(c(rep("Tax", 11),rep("Bans", 4)), 7))
prop_vec$Int <- factor(prop_vec$Int, levels = unique(prop_vec$Int))
int_failure_p <- ggplot(prop_vec, aes(intervention, scen)) + theme_bw() +
geom_tile(aes(fill = prop_inc)) + scale_fill_distiller(palette ="Reds", direction = 1)  +
facet_grid(factor~ Int, scales  = "free", space = "free") +
scale_x_discrete(name = "", expand = c(0, 0))  +  ggtitle("Probability of Intervention Failure") +
theme(strip.background = element_blank(), axis.text=element_text(size=11),
strip.text = element_blank(), legend.position="bottom",
plot.title = element_text(face = "bold", size = 15),
axis.text.x = element_text(angle = 0, hjust=0.5)) +
scale_y_discrete(name = "", expand = c(0, 0)) +
guides(fill = guide_colorbar(title = "Probability of Intervention Failure",
label.position = "bottom",
title.position = "left", title.vjust = 1,
# draw border around the legend
frame.colour = "black",
barwidth = 10,
barheight = 1))
# Combination Plot --------------------------------------------------------
test <- ggarrange(res_plot, inf_plot,avg_anti_plot, ncol = 1, nrow = 3)
test
win_import_change <- readRDS("MDR_run_ban_realPED_75.RDS"); win_import <- win_import_change
win_import[win_import == -1000] <- NA
for(i in seq_along(win_import)) {
win_import[[i]] <- as(win_import[[i]], class(win_import[[i]][[1]]))
}
#Infections
win_inf <- (win_import[,1:13])
#plot(density(win_inf[,1]))
#Testing for Normality
shapiro.test(win_inf[,1]) #Data is significantly different from a normal distribution - it is non normal
#qqline(win_inf[,1], col = "steelblue", lwd = 2)
#Resistance
win_res <- (win_import[,14:26])
#Testing for Normality
shapiro.test(win_res[,1]) #Data is significantly different from a normal distribution - it is non-normal
#qqline(win_res[,1], col = "steelblue", lwd = 2)
#Shannon's
win_shan <- round((win_import[,27:39]), 3)
win_shan[is.na(win_shan)] <- 0
win_shan <- win_shan[rowSums(win_shan[, -1]) > 0, ]
#Average Antibiotics
win_avganti <- round((win_import[,40:52]), 3)
# Resistance --------------------------------------------------------------
inc_res <- win_res
m_res <- melt(inc_res, measure.vars = colnames(inc_res))
m_res$factors <- c(rep("Taxation", 10000), rep("Ban", 3000))
m_res$factors <- factor(m_res$factors, levels = c("Taxation", "Ban"))
test_stat <- pairwise.wilcox.test(m_res$value, m_res$variable,
p.adjust.method = "bonferroni")
test_stat
inc_res <- win_res
m_res <- melt(inc_res, measure.vars = colnames(inc_res))
m_res$factors <- c(rep("Taxation", 10000), rep("Ban", 3000))
m_res$factors <- factor(m_res$factors, levels = c("Taxation", "Ban"))
test_stat <- pairwise.wilcox.test(m_res$value, m_res$variable,
p.adjust.method = "bonferroni")
win_res_trans <- t(apply(inc_res, 1, function(x) {
val = min(x, na.rm = T)
x[x != val] <- 0
x[x == val] <- 1
return(x)}
))
prop_vec <- data.frame("intervention" = unique(m_res$variable),
"prop_inc" = NA,
"95_quant" = NA)
m_win_import_change <- melt(win_import_change, measure.vars = colnames(win_import_change))
for(i in 1:13) {
prop_1000 <- win_import_change[,c(14:26)[i]]
prop_vec[i,2] <- length(prop_1000[prop_1000 == -1000])/sum(!is.na(prop_1000))
}
p <- ggplot(m_res, aes(x=factor(variable), y=value)) + geom_boxplot()
prop_vec[,3] <- ggplot_build(p)$data[[1]]$ymax
prop_win_res <- data.frame("Resistance" = colSums(win_res_trans, na.rm = T)/nrow(win_res_trans),
"Interventions" = as.factor(c("FT", "ST (HR)", "ST (MR)",
"ST (LR)",
"DT (1Rd)", "DT (2Rd)",
"DT (3Rd)", "DT (4Rd)",
"DT (5Rd)", "DT (6Rd)",
"Ban (HR)", "Ban (MR)", "Ban (LR)")))
prop_win_res$Interventions <- factor(prop_win_res$Interventions, levels = c(prop_win_res$Interventions))
prop_win_res$factors <- c(rep("Taxation", 10) , rep("Ban", 3))
prop_win_res$factors <- factor(prop_win_res$factors, levels = c("Taxation", "Ban"))
prop_win_res$Color <- "black"
prop_win_res[prop_win_res$Resistance == max(prop_win_res$Resistance),4] <- "white"
#Win Heat Map
win_res_p <- ggplot(prop_win_res, aes(Interventions, "")) + theme_bw() +
geom_tile(aes(fill = Resistance)) +
facet_grid(. ~ factors, scales = "free") +
geom_text(aes(label=Resistance, color = Interventions)) +
scale_colour_manual(values=prop_win_res$Color) +
scale_fill_distiller(palette ="Blues", direction = 1) +
scale_x_discrete(name = "", expand = c(0, 0))  +
scale_y_discrete(name = "", expand = c(0, 0)) +
guides(fill = guide_colorbar(title = "Probabilty that Intervention Wins",
title.position = "left", title.vjust = 1,
# draw border around the legend
frame.colour = "black",
barwidth = 15,
barheight = 1), color = "none") +
theme(strip.background = element_blank(), axis.text=element_text(size=11),
strip.text = element_blank(), legend.position="bottom",
axis.text.x = element_text(angle = 0, hjust=0.5), axis.text.y = element_blank(), axis.ticks.y = element_blank(),
plot.margin = unit(c(0,1,0,1.75), "cm"))
#Box Plot
box_res <- ggplot(m_res, aes(x=variable, y=value, fill = variable, alpha = variable)) + coord_cartesian(ylim=c(-1.75, 1.5)) +
facet_grid(. ~ factors, scales = "free", space = "free") +
geom_boxplot(outlier.shape = NA, show.legend = FALSE, fill = "red") + theme_bw() + labs(y = "Change in Resistance (%)", x = "") +
scale_alpha_manual(values=  prop_vec$prop_inc) +
theme(legend.position= "bottom", legend.text=element_text(size=11), legend.title =element_text(size=12), axis.text=element_text(size=11),
axis.title.y=element_text(size=12), axis.title.x= element_blank(), plot.margin = unit(c(0.3,1,0,1), "cm"),
legend.spacing.x = unit(0.3, 'cm'), axis.text.x = element_blank(), axis.ticks.x = element_blank(),
strip.text.x = element_text(size = 11, colour = "black", face="bold")) +
scale_x_discrete(labels= c("FT", "ST (HR)", "ST (MR)",
"ST (LR)",
"DT (1Rd)", "DT (2Rd)",
"DT (3Rd)", "DT (4Rd)",
"DT (5Rd)", "DT (6Rd)",
"Ban (HR)", "Ban (MR)", "Ban (LR)"))
ggplot_build(box_res)$data
comb_res <- ggarrange(box_res, win_res_p, ncol =1, nrow= 2, heights = c(1, 0.6), align = "v")
comb_res
test_stat
win_import_change <- readRDS("MDR_run_ban_realPED_25.RDS"); win_import <- win_import_change
win_import[win_import == -1000] <- NA
for(i in seq_along(win_import)) {
win_import[[i]] <- as(win_import[[i]], class(win_import[[i]][[1]]))
}
#Infections
win_inf <- (win_import[,1:13])
#plot(density(win_inf[,1]))
#Testing for Normality
shapiro.test(win_inf[,1]) #Data is significantly different from a normal distribution - it is non normal
#qqline(win_inf[,1], col = "steelblue", lwd = 2)
#Resistance
win_res <- (win_import[,14:26])
#Testing for Normality
shapiro.test(win_res[,1]) #Data is significantly different from a normal distribution - it is non-normal
#qqline(win_res[,1], col = "steelblue", lwd = 2)
#Shannon's
win_shan <- round((win_import[,27:39]), 3)
win_shan[is.na(win_shan)] <- 0
win_shan <- win_shan[rowSums(win_shan[, -1]) > 0, ]
#Average Antibiotics
win_avganti <- round((win_import[,40:52]), 3)
# Resistance --------------------------------------------------------------
inc_res <- win_res
m_res <- melt(inc_res, measure.vars = colnames(inc_res))
m_res$factors <- c(rep("Taxation", 10000), rep("Ban", 3000))
m_res$factors <- factor(m_res$factors, levels = c("Taxation", "Ban"))
test_stat <- pairwise.wilcox.test(m_res$value, m_res$variable,
p.adjust.method = "bonferroni")
win_res_trans <- t(apply(inc_res, 1, function(x) {
val = min(x, na.rm = T)
x[x != val] <- 0
x[x == val] <- 1
return(x)}
))
prop_vec <- data.frame("intervention" = unique(m_res$variable),
"prop_inc" = NA,
"95_quant" = NA)
m_win_import_change <- melt(win_import_change, measure.vars = colnames(win_import_change))
for(i in 1:13) {
prop_1000 <- win_import_change[,c(14:26)[i]]
prop_vec[i,2] <- length(prop_1000[prop_1000 == -1000])/sum(!is.na(prop_1000))
}
p <- ggplot(m_res, aes(x=factor(variable), y=value)) + geom_boxplot()
prop_vec[,3] <- ggplot_build(p)$data[[1]]$ymax
prop_win_res <- data.frame("Resistance" = colSums(win_res_trans, na.rm = T)/nrow(win_res_trans),
"Interventions" = as.factor(c("FT", "ST (HR)", "ST (MR)",
"ST (LR)",
"DT (1Rd)", "DT (2Rd)",
"DT (3Rd)", "DT (4Rd)",
"DT (5Rd)", "DT (6Rd)",
"Ban (HR)", "Ban (MR)", "Ban (LR)")))
prop_win_res$Interventions <- factor(prop_win_res$Interventions, levels = c(prop_win_res$Interventions))
prop_win_res$factors <- c(rep("Taxation", 10) , rep("Ban", 3))
prop_win_res$factors <- factor(prop_win_res$factors, levels = c("Taxation", "Ban"))
prop_win_res$Color <- "black"
prop_win_res[prop_win_res$Resistance == max(prop_win_res$Resistance),4] <- "white"
#Win Heat Map
win_res_p <- ggplot(prop_win_res, aes(Interventions, "")) + theme_bw() +
geom_tile(aes(fill = Resistance)) +
facet_grid(. ~ factors, scales = "free") +
geom_text(aes(label=Resistance, color = Interventions)) +
scale_colour_manual(values=prop_win_res$Color) +
scale_fill_distiller(palette ="Blues", direction = 1) +
scale_x_discrete(name = "", expand = c(0, 0))  +
scale_y_discrete(name = "", expand = c(0, 0)) +
guides(fill = guide_colorbar(title = "Probabilty that Intervention Wins",
title.position = "left", title.vjust = 1,
# draw border around the legend
frame.colour = "black",
barwidth = 15,
barheight = 1), color = "none") +
theme(strip.background = element_blank(), axis.text=element_text(size=11),
strip.text = element_blank(), legend.position="bottom",
axis.text.x = element_text(angle = 0, hjust=0.5), axis.text.y = element_blank(), axis.ticks.y = element_blank(),
plot.margin = unit(c(0,1,0,1.75), "cm"))
#Box Plot
box_res <- ggplot(m_res, aes(x=variable, y=value, fill = variable, alpha = variable)) + coord_cartesian(ylim=c(-1.75, 1.5)) +
facet_grid(. ~ factors, scales = "free", space = "free") +
geom_boxplot(outlier.shape = NA, show.legend = FALSE, fill = "red") + theme_bw() + labs(y = "Change in Resistance (%)", x = "") +
scale_alpha_manual(values=  prop_vec$prop_inc) +
theme(legend.position= "bottom", legend.text=element_text(size=11), legend.title =element_text(size=12), axis.text=element_text(size=11),
axis.title.y=element_text(size=12), axis.title.x= element_blank(), plot.margin = unit(c(0.3,1,0,1), "cm"),
legend.spacing.x = unit(0.3, 'cm'), axis.text.x = element_blank(), axis.ticks.x = element_blank(),
strip.text.x = element_text(size = 11, colour = "black", face="bold")) +
scale_x_discrete(labels= c("FT", "ST (HR)", "ST (MR)",
"ST (LR)",
"DT (1Rd)", "DT (2Rd)",
"DT (3Rd)", "DT (4Rd)",
"DT (5Rd)", "DT (6Rd)",
"Ban (HR)", "Ban (MR)", "Ban (LR)"))
ggplot_build(box_res)$data
test_stat
comb_res <- ggarrange(box_res, win_res_p, ncol =1, nrow= 2, heights = c(1, 0.6), align = "v")
comb_res
win_import_change <- readRDS("MDR_run_ban_highComp.RDS"); win_import <- win_import_change
win_import[win_import == -1000] <- NA
for(i in seq_along(win_import)) {
win_import[[i]] <- as(win_import[[i]], class(win_import[[i]][[1]]))
}
#Infections
win_inf <- (win_import[,1:13])
#plot(density(win_inf[,1]))
#Testing for Normality
shapiro.test(win_inf[,1]) #Data is significantly different from a normal distribution - it is non normal
#qqline(win_inf[,1], col = "steelblue", lwd = 2)
#Resistance
win_res <- (win_import[,14:26])
#Testing for Normality
shapiro.test(win_res[,1]) #Data is significantly different from a normal distribution - it is non-normal
#qqline(win_res[,1], col = "steelblue", lwd = 2)
#Shannon's
win_shan <- round((win_import[,27:39]), 3)
win_shan[is.na(win_shan)] <- 0
win_shan <- win_shan[rowSums(win_shan[, -1]) > 0, ]
#Average Antibiotics
win_avganti <- round((win_import[,40:52]), 3)
# Resistance --------------------------------------------------------------
inc_res <- win_res
m_res <- melt(inc_res, measure.vars = colnames(inc_res))
m_res$factors <- c(rep("Taxation", 10000), rep("Ban", 3000))
m_res$factors <- factor(m_res$factors, levels = c("Taxation", "Ban"))
test_stat <- pairwise.wilcox.test(m_res$value, m_res$variable,
p.adjust.method = "bonferroni")
win_res_trans <- t(apply(inc_res, 1, function(x) {
val = min(x, na.rm = T)
x[x != val] <- 0
x[x == val] <- 1
return(x)}
))
prop_vec <- data.frame("intervention" = unique(m_res$variable),
"prop_inc" = NA,
"95_quant" = NA)
m_win_import_change <- melt(win_import_change, measure.vars = colnames(win_import_change))
for(i in 1:13) {
prop_1000 <- win_import_change[,c(14:26)[i]]
prop_vec[i,2] <- length(prop_1000[prop_1000 == -1000])/sum(!is.na(prop_1000))
}
p <- ggplot(m_res, aes(x=factor(variable), y=value)) + geom_boxplot()
prop_vec[,3] <- ggplot_build(p)$data[[1]]$ymax
prop_win_res <- data.frame("Resistance" = colSums(win_res_trans, na.rm = T)/nrow(win_res_trans),
"Interventions" = as.factor(c("FT", "ST (HR)", "ST (MR)",
"ST (LR)",
"DT (1Rd)", "DT (2Rd)",
"DT (3Rd)", "DT (4Rd)",
"DT (5Rd)", "DT (6Rd)",
"Ban (HR)", "Ban (MR)", "Ban (LR)")))
prop_win_res$Interventions <- factor(prop_win_res$Interventions, levels = c(prop_win_res$Interventions))
prop_win_res$factors <- c(rep("Taxation", 10) , rep("Ban", 3))
prop_win_res$factors <- factor(prop_win_res$factors, levels = c("Taxation", "Ban"))
prop_win_res$Color <- "black"
prop_win_res[prop_win_res$Resistance == max(prop_win_res$Resistance),4] <- "white"
#Win Heat Map
win_res_p <- ggplot(prop_win_res, aes(Interventions, "")) + theme_bw() +
geom_tile(aes(fill = Resistance)) +
facet_grid(. ~ factors, scales = "free") +
geom_text(aes(label=Resistance, color = Interventions)) +
scale_colour_manual(values=prop_win_res$Color) +
scale_fill_distiller(palette ="Blues", direction = 1) +
scale_x_discrete(name = "", expand = c(0, 0))  +
scale_y_discrete(name = "", expand = c(0, 0)) +
guides(fill = guide_colorbar(title = "Probabilty that Intervention Wins",
title.position = "left", title.vjust = 1,
# draw border around the legend
frame.colour = "black",
barwidth = 15,
barheight = 1), color = "none") +
theme(strip.background = element_blank(), axis.text=element_text(size=11),
strip.text = element_blank(), legend.position="bottom",
axis.text.x = element_text(angle = 0, hjust=0.5), axis.text.y = element_blank(), axis.ticks.y = element_blank(),
plot.margin = unit(c(0,1,0,1.75), "cm"))
#Box Plot
box_res <- ggplot(m_res, aes(x=variable, y=value, fill = variable, alpha = variable)) + coord_cartesian(ylim=c(-1.75, 1.5)) +
facet_grid(. ~ factors, scales = "free", space = "free") +
geom_boxplot(outlier.shape = NA, show.legend = FALSE, fill = "red") + theme_bw() + labs(y = "Change in Resistance (%)", x = "") +
scale_alpha_manual(values=  prop_vec$prop_inc) +
theme(legend.position= "bottom", legend.text=element_text(size=11), legend.title =element_text(size=12), axis.text=element_text(size=11),
axis.title.y=element_text(size=12), axis.title.x= element_blank(), plot.margin = unit(c(0.3,1,0,1), "cm"),
legend.spacing.x = unit(0.3, 'cm'), axis.text.x = element_blank(), axis.ticks.x = element_blank(),
strip.text.x = element_text(size = 11, colour = "black", face="bold")) +
scale_x_discrete(labels= c("FT", "ST (HR)", "ST (MR)",
"ST (LR)",
"DT (1Rd)", "DT (2Rd)",
"DT (3Rd)", "DT (4Rd)",
"DT (5Rd)", "DT (6Rd)",
"Ban (HR)", "Ban (MR)", "Ban (LR)"))
ggplot_build(box_res)$data
comb_res <- ggarrange(box_res, win_res_p, ncol =1, nrow= 2, heights = c(1, 0.6), align = "v")
comb_res
test_stat
win_import_change <- readRDS("MDR_run_ban_lowComp.RDS"); win_import <- win_import_change
win_import[win_import == -1000] <- NA
for(i in seq_along(win_import)) {
win_import[[i]] <- as(win_import[[i]], class(win_import[[i]][[1]]))
}
#Infections
win_inf <- (win_import[,1:13])
#plot(density(win_inf[,1]))
#Testing for Normality
shapiro.test(win_inf[,1]) #Data is significantly different from a normal distribution - it is non normal
#qqline(win_inf[,1], col = "steelblue", lwd = 2)
#Resistance
win_res <- (win_import[,14:26])
#Testing for Normality
shapiro.test(win_res[,1]) #Data is significantly different from a normal distribution - it is non-normal
#qqline(win_res[,1], col = "steelblue", lwd = 2)
#Shannon's
win_shan <- round((win_import[,27:39]), 3)
win_shan[is.na(win_shan)] <- 0
win_shan <- win_shan[rowSums(win_shan[, -1]) > 0, ]
#Average Antibiotics
win_avganti <- round((win_import[,40:52]), 3)
# Resistance --------------------------------------------------------------
inc_res <- win_res
m_res <- melt(inc_res, measure.vars = colnames(inc_res))
m_res$factors <- c(rep("Taxation", 10000), rep("Ban", 3000))
m_res$factors <- factor(m_res$factors, levels = c("Taxation", "Ban"))
test_stat <- pairwise.wilcox.test(m_res$value, m_res$variable,
p.adjust.method = "bonferroni")
win_res_trans <- t(apply(inc_res, 1, function(x) {
val = min(x, na.rm = T)
x[x != val] <- 0
x[x == val] <- 1
return(x)}
))
prop_vec <- data.frame("intervention" = unique(m_res$variable),
"prop_inc" = NA,
"95_quant" = NA)
m_win_import_change <- melt(win_import_change, measure.vars = colnames(win_import_change))
for(i in 1:13) {
prop_1000 <- win_import_change[,c(14:26)[i]]
prop_vec[i,2] <- length(prop_1000[prop_1000 == -1000])/sum(!is.na(prop_1000))
}
p <- ggplot(m_res, aes(x=factor(variable), y=value)) + geom_boxplot()
prop_vec[,3] <- ggplot_build(p)$data[[1]]$ymax
prop_win_res <- data.frame("Resistance" = colSums(win_res_trans, na.rm = T)/nrow(win_res_trans),
"Interventions" = as.factor(c("FT", "ST (HR)", "ST (MR)",
"ST (LR)",
"DT (1Rd)", "DT (2Rd)",
"DT (3Rd)", "DT (4Rd)",
"DT (5Rd)", "DT (6Rd)",
"Ban (HR)", "Ban (MR)", "Ban (LR)")))
prop_win_res$Interventions <- factor(prop_win_res$Interventions, levels = c(prop_win_res$Interventions))
prop_win_res$factors <- c(rep("Taxation", 10) , rep("Ban", 3))
prop_win_res$factors <- factor(prop_win_res$factors, levels = c("Taxation", "Ban"))
prop_win_res$Color <- "black"
prop_win_res[prop_win_res$Resistance == max(prop_win_res$Resistance),4] <- "white"
#Win Heat Map
win_res_p <- ggplot(prop_win_res, aes(Interventions, "")) + theme_bw() +
geom_tile(aes(fill = Resistance)) +
facet_grid(. ~ factors, scales = "free") +
geom_text(aes(label=Resistance, color = Interventions)) +
scale_colour_manual(values=prop_win_res$Color) +
scale_fill_distiller(palette ="Blues", direction = 1) +
scale_x_discrete(name = "", expand = c(0, 0))  +
scale_y_discrete(name = "", expand = c(0, 0)) +
guides(fill = guide_colorbar(title = "Probabilty that Intervention Wins",
title.position = "left", title.vjust = 1,
# draw border around the legend
frame.colour = "black",
barwidth = 15,
barheight = 1), color = "none") +
theme(strip.background = element_blank(), axis.text=element_text(size=11),
strip.text = element_blank(), legend.position="bottom",
axis.text.x = element_text(angle = 0, hjust=0.5), axis.text.y = element_blank(), axis.ticks.y = element_blank(),
plot.margin = unit(c(0,1,0,1.75), "cm"))
#Box Plot
box_res <- ggplot(m_res, aes(x=variable, y=value, fill = variable, alpha = variable)) + coord_cartesian(ylim=c(-1.75, 1.5)) +
facet_grid(. ~ factors, scales = "free", space = "free") +
geom_boxplot(outlier.shape = NA, show.legend = FALSE, fill = "red") + theme_bw() + labs(y = "Change in Resistance (%)", x = "") +
scale_alpha_manual(values=  prop_vec$prop_inc) +
theme(legend.position= "bottom", legend.text=element_text(size=11), legend.title =element_text(size=12), axis.text=element_text(size=11),
axis.title.y=element_text(size=12), axis.title.x= element_blank(), plot.margin = unit(c(0.3,1,0,1), "cm"),
legend.spacing.x = unit(0.3, 'cm'), axis.text.x = element_blank(), axis.ticks.x = element_blank(),
strip.text.x = element_text(size = 11, colour = "black", face="bold")) +
scale_x_discrete(labels= c("FT", "ST (HR)", "ST (MR)",
"ST (LR)",
"DT (1Rd)", "DT (2Rd)",
"DT (3Rd)", "DT (4Rd)",
"DT (5Rd)", "DT (6Rd)",
"Ban (HR)", "Ban (MR)", "Ban (LR)"))
ggplot_build(box_res)$data
comb_res <- ggarrange(box_res, win_res_p, ncol =1, nrow= 2, heights = c(1, 0.6), align = "v")
test_stat
comb_res
