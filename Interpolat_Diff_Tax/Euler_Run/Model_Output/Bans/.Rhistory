barheight = 1))
source("~/Documents/PostDoc/Diff_Tax_Analysis/Theoretical_Analysis/Interpolat_Diff_Tax/Distribution_Analysis/Scenario_Anal_Compare_Bans_v1.R", echo=TRUE)
int_failure <- comb_imp[,c(16:30,61)]
prop_vec <- data.frame("intervention" = as.factor(rep(colnames(int_failure)[-16], 7)),
"prop_inc" = NA,
"scen" = NA)
for(z in 1:7) {
win_import <- int_failure[int_failure$scen == unique(int_failure$scen)[z],-16]
for(i in 1:15) {
prop_1000 <- win_import[,i]
prop_vec[i+(15*(z-1)),2] <- length(prop_1000[prop_1000 == -1000])/sum(!is.na(prop_1000))
prop_vec[i+(15*(z-1)),3] <- c("Baseline", "Case Study", "Severe", "10% Thresh", "5% Thresh", "Two Classes", "Four Classes")[z]
}
}
prop_vec$intervention <- rep(c("FT", "ST (HR)", "ST (MR1)","ST (MR2)",
"ST (LR)",
"DT (1Rd)", "DT (2Rd)",
"DT (3Rd)", "DT (4Rd)",
"DT (5Rd)", "DT (6Rd)",
"Ban (HR)", "Ban (MR1)","Ban (MR2)", "Ban (LR)"), 7)
prop_vec$intervention <- factor(prop_vec$intervention, levels = unique(prop_vec$intervention))
prop_vec$factor <- c(rep("Baseline", 15), rep("Other", 15*6))
prop_vec$factor <- factor(prop_vec$factor, levels = unique(prop_vec$factor))
prop_vec$Int <- as.factor(rep(c(rep("Tax", 11),rep("Bans", 4)), 7))
prop_vec$Int <- factor(prop_vec$Int, levels = unique(prop_vec$Int))
int_failure_p <- ggplot(prop_vec, aes(intervention, scen)) + theme_bw() +
geom_tile(aes(fill = prop_inc)) + scale_fill_distiller(palette ="Reds", direction = 1)  +
facet_grid(factor~ Int, scales  = "free", space = "free") +
scale_x_discrete(name = "", expand = c(0, 0))  +  ggtitle("Probability of Intervention Failure") +
theme(strip.background = element_blank(), axis.text=element_text(size=11),
strip.text = element_blank(), legend.position="bottom",
plot.title = element_text(face = "bold", size = 15),
axis.text.x = element_text(angle = 0, hjust=0.5)) +
scale_y_discrete(name = "", expand = c(0, 0)) +
guides(fill = guide_colorbar(title = "Probability of Intervention Failure",
label.position = "bottom",
title.position = "left", title.vjust = 1,
# draw border around the legend
frame.colour = "black",
barwidth = 10,
barheight = 1))
int_failure_p
int_failure <- comb_imp[,c(16:30,61)]
prop_vec <- data.frame("intervention" = as.factor(rep(colnames(int_failure)[-16], 7)),
"prop_inc" = NA,
"scen" = NA)
prop_vec
int_failure <- comb_imp[,c(16:30,61)]
prop_vec <- data.frame("intervention" = as.factor(rep(colnames(int_failure)[-16], 10)),
"prop_inc" = NA,
"scen" = NA)
vec_fail
vec_fail
comb_imp
inf_frame
vec_fail$scen <- inf_frame$scen
vec_fail
vec_fail$scen <- inf_frame$scen
vec_fail$intervention <- rep(c("FT", "ST (HR)", "ST (MR1)","ST (MR2)",
"ST (LR)",
"DT (1Rd)", "DT (2Rd)",
"DT (3Rd)", "DT (4Rd)",
"DT (5Rd)", "DT (6Rd)",
"Ban (HR)", "Ban (MR1)","Ban (MR2)", "Ban (LR)"), 10)
vec_fail
vec_fail$intervention <- factor(vec_fail$intervention, levels = unique(vec_fail$intervention))
vec_fail$factor <- c(rep("Baseline", 15), rep("Other", 15*9))
vec_fail$factor <- factor(vec_fail$factor, levels = unique(vec_fail$factor))
vec_fail$Int <- as.factor(rep(c(rep("Tax", 11),rep("Bans", 4)), 10))
vec_fail$Int <- factor(vec_fail$Int, levels = unique(vec_fail$Int))
vec_fail
ggplot(vec_fail, aes(intervention, scen)) + theme_bw() +
geom_tile(aes(fill = prop_inc)) + scale_fill_distiller(palette ="Reds", direction = 1)  +
facet_grid(factor~ Int, scales  = "free", space = "free") +
scale_x_discrete(name = "", expand = c(0, 0))  +  ggtitle("Probability of Intervention Failure") +
theme(strip.background = element_blank(), axis.text=element_text(size=11),
strip.text = element_blank(), legend.position="bottom",
plot.title = element_text(face = "bold", size = 15),
axis.text.x = element_text(angle = 0, hjust=0.5)) +
scale_y_discrete(name = "", expand = c(0, 0)) +
guides(fill = guide_colorbar(title = "Probability of Intervention Failure",
label.position = "bottom",
title.position = "left", title.vjust = 1,
# draw border around the legend
frame.colour = "black",
barwidth = 10,
barheight = 1))
res_frame
test_scale <- ggarrange(res_plot, inf_plot, avg_anti_plot, ncol = 1, nrow = 3)
test_no_scale <- ggarrange(res_plot_noscale_plot, inf_noscale_plot, avg_anti_noscale_plot, ncol = 1, nrow = 3)
inf_noscale_plot <- ggplot(inf_frame, aes(Interventions, scen)) + theme_bw() +
geom_tile(aes(fill = Infections)) + scale_fill_distiller(palette ="Blues", direction = 1) +
facet_grid(factor~ Int, scales  = "free", space = "free") +
scale_x_discrete(name = "", expand = c(0, 0)) + ggtitle("Total Infections") +
theme(strip.background = element_blank(), axis.text=element_text(size=11),
strip.text = element_blank(), legend.position="bottom",
plot.title = element_text(face = "bold", size = 15),
axis.text.x = element_text(angle = 0, hjust=0.5)) +
scale_y_discrete(name = "", expand = c(0, 0)) +
guides(fill = guide_colorbar(title = "Probability that Intervention Wins",
label.position = "bottom",
title.position = "left", title.vjust = 1,
# draw border around the legend
frame.colour = "black",
barwidth = 10,
barheight = 1))
res_plot_noscale_plot <- ggplot(res_frame, aes(Interventions, scen)) + theme_bw() +
geom_tile(aes(fill = Resistance)) + scale_fill_distiller(palette ="Blues", direction = 1) +
facet_grid(factor~ Int, scales  = "free", space = "free") +
scale_x_discrete(name = "", expand = c(0, 0)) +  ggtitle("Average Resistance") +
theme(strip.background = element_blank(), axis.text=element_text(size=11),
plot.title = element_text(face = "bold", size = 15),
strip.text = element_blank(), legend.position="bottom",
axis.text.x =element_text(angle = 0, hjust=0.5)) +
scale_y_discrete(name = "", expand = c(0, 0)) +
guides(fill = guide_colorbar(title = "Probability that Intervention Wins",
label.position = "bottom",
title.position = "left", title.vjust = 1,
# draw border around the legend
frame.colour = "black",
barwidth = 10,
barheight = 1))
avg_anti_noscale_plot <- ggplot(avganti_frame, aes(Interventions, scen)) + theme_bw() +
geom_tile(aes(fill = avganti)) + scale_fill_distiller(palette ="Blues", direction = 1) +
facet_grid(factor~ Int, scales  = "free", space = "free") +
scale_x_discrete(name = "", expand = c(0, 0))  +  ggtitle("Average Antibiotics Available") +
theme(strip.background = element_blank(), axis.text=element_text(size=11),
strip.text = element_blank(), legend.position="bottom",
plot.title = element_text(face = "bold", size = 15),
axis.text.x = element_text(angle = 0, hjust=0.5)) +
scale_y_discrete(name = "", expand = c(0, 0)) +
guides(fill = guide_colorbar(title = "Probability that Intervention Wins",
label.position = "bottom",
title.position = "left", title.vjust = 1,
# draw border around the legend
frame.colour = "black",
barwidth = 10,
barheight = 1))
# Combination Plot --------------------------------------------------------
test_scale <- ggarrange(res_plot, inf_plot, avg_anti_plot, ncol = 1, nrow = 3)
test_no_scale <- ggarrange(res_plot_noscale_plot, inf_noscale_plot, avg_anti_noscale_plot, ncol = 1, nrow = 3)
avganti_frame
ggplot(avganti_frame, aes(Interventions, scen)) + theme_bw() +
geom_tile(aes(fill = AverageAnti)) + scale_fill_distiller(palette ="Blues", direction = 1) +
facet_grid(factor~ Int, scales  = "free", space = "free") +
scale_x_discrete(name = "", expand = c(0, 0))  +  ggtitle("Average Antibiotics Available") +
theme(strip.background = element_blank(), axis.text=element_text(size=11),
strip.text = element_blank(), legend.position="bottom",
plot.title = element_text(face = "bold", size = 15),
axis.text.x = element_text(angle = 0, hjust=0.5)) +
scale_y_discrete(name = "", expand = c(0, 0)) +
guides(fill = guide_colorbar(title = "Probability that Intervention Wins",
label.position = "bottom",
title.position = "left", title.vjust = 1,
# draw border around the legend
frame.colour = "black",
barwidth = 10,
barheight = 1))
avg_anti_noscale_plot <- ggplot(avganti_frame, aes(Interventions, scen)) + theme_bw() +
geom_tile(aes(fill = AverageAnti)) + scale_fill_distiller(palette ="Blues", direction = 1) +
facet_grid(factor~ Int, scales  = "free", space = "free") +
scale_x_discrete(name = "", expand = c(0, 0))  +  ggtitle("Average Antibiotics Available") +
theme(strip.background = element_blank(), axis.text=element_text(size=11),
strip.text = element_blank(), legend.position="bottom",
plot.title = element_text(face = "bold", size = 15),
axis.text.x = element_text(angle = 0, hjust=0.5)) +
scale_y_discrete(name = "", expand = c(0, 0)) +
guides(fill = guide_colorbar(title = "Probability that Intervention Wins",
label.position = "bottom",
title.position = "left", title.vjust = 1,
# draw border around the legend
frame.colour = "black",
barwidth = 10,
barheight = 1))
avg_anti_noscale_plot
test_scale <- ggarrange(res_plot, inf_plot, avg_anti_plot, ncol = 1, nrow = 3)
test_no_scale <- ggarrange(res_plot_noscale_plot, inf_noscale_plot, avg_anti_noscale_plot, ncol = 1, nrow = 3)
test_no_scale
test_scale <- ggarrange(res_plot, inf_plot, avg_anti_plot, ncol = 1, nrow = 3)
test_no_scale <- ggarrange(res_plot_noscale_plot, inf_noscale_plot, avg_anti_noscale_plot, ncol = 1, nrow = 3)
ggsave(test_scale, filename = "scen_compare.png", dpi = 300, width = 13, height = 12, units = "in",
path = "/Users/amorgan/Documents/PostDoc/Diff_Tax_Analysis/Theoretical_Analysis/Interpolat_Diff_Tax/Figures/")
ggsave(test_no_scale, filename = "scen_compare_NOSCALE.png", dpi = 300, width = 13, height = 12, units = "in",
path = "/Users/amorgan/Documents/PostDoc/Diff_Tax_Analysis/Theoretical_Analysis/Interpolat_Diff_Tax/Figures/")
ggsave(int_failure_p, filename = "int_failure.png", dpi = 300, width = 13, height = 6, units = "in",
path = "/Users/amorgan/Documents/PostDoc/Diff_Tax_Analysis/Theoretical_Analysis/Interpolat_Diff_Tax/Figures/")
library("deSolve"); library("ggplot2"); library("reshape2"); library("ggpubr"); library("rootSolve"); library("viridis"); library("cowplot")
rm(list=ls())
# Import in Dataset -------------------------------------------------------
tax_data <- readRDS("/Users/amorgan/Documents/PostDoc/Diff_Tax_Analysis/Theoretical_Analysis/Interpolat_Diff_Tax/Money_Analysis/Tax_Analysis_Sens_v2.RDS")
library("deSolve"); library("ggplot2"); library("reshape2"); library("ggpubr"); library("rootSolve"); library("viridis"); library("cowplot")
rm(list=ls())
# Import in Dataset -------------------------------------------------------
tax_data <- readRDS("/Users/amorgan/Documents/PostDoc/Diff_Tax_Analysis/Theoretical_Analysis/Interpolat_Diff_Tax/Money_Analysis/taxlist_v1_tax.RDS")
tax_data <- readRDS("/Users/amorgan/Documents/PostDoc/Diff_Tax_Analysis/Theoretical_Analysis/Interpolat_Diff_Tax/Money_Analysis/taxlist_v1_tax25.RDS")
tax_data <- readRDS("/Users/amorgan/Documents/PostDoc/Diff_Tax_Analysis/Theoretical_Analysis/Interpolat_Diff_Tax/Money_Analysis/taxlist_v1_tax75.RDS")
# Resistance --------------------------------------------------------------
tax_dist <- tax_data
m_tax_dist <- melt(tax_dist, measure.vars = colnames(tax_dist))
m_tax_dist$country <- rep(c("HIC", "LMIC"), each = 1000, times = 10)
test_stat <- pairwise.wilcox.test(m_tax_dist$value, m_tax_dist$variable,
p.adjust.method = "bonferroni")
# Faceted Box Plot --------------------------------------------------------
#Need this function to be able to limit the axis when faceting (due to the outliers)
calc_boxplot_stat <- function(x) {
coef <- 1.5
n <- sum(!is.na(x))
# calculate quantiles
stats <- quantile(x, probs = c(0.0, 0.25, 0.5, 0.75, 1.0))
names(stats) <- c("ymin", "lower", "middle", "upper", "ymax")
iqr <- diff(stats[c(2, 4)])
# set whiskers
outliers <- x < (stats[2] - coef * iqr) | x > (stats[4] + coef * iqr)
if (any(outliers)) {
stats[c(1, 5)] <- range(c(stats[2:4], x[!outliers]), na.rm = TRUE)
}
return(stats)
}
#Box Plot
box_tax <- ggplot(m_tax_dist, aes(x=variable, y=(value/10000000000)/20, fill=variable)) +
stat_summary(fun.data = calc_boxplot_stat, geom="boxplot") + theme_bw() +
facet_wrap(~country, scales="free", ncol = 1 , nrow = 2)  + labs(y = "Average Yearly Revenue ($ 10 Billion)", x = "") +
theme(legend.position= "bottom", legend.text=element_text(size=11), legend.title =element_text(size=12),
axis.text=element_text(size=11),
axis.title =element_text(size=12),  plot.margin = unit(c(0.3,1,0,1), "cm"),
legend.spacing.x = unit(0.3, 'cm'), axis.ticks.x = element_blank(),
strip.text.x = element_text(size = 11, colour = "black", face="bold")) +
scale_y_continuous(expand = c(0,0)) +
scale_x_discrete(labels= c("FT", "ST (HR)",
"ST (MR)", "ST (LR)",
"DT (1Rd)",
"DT (2Rd)",
"DT (3Rd)",
"DT (4Rd)",
"DT (5Rd)",
"DT (6Rd)")) + guides(fill = "none")
box_tax
ggplot(m_tax_dist, aes(x=variable, y=(value/10000000000)/20, fill=variable)) +
stat_summary(fun.data = calc_boxplot_stat, geom="boxplot") + theme_bw() +
facet_wrap(~country, scales="free", ncol = 1 , nrow = 2)  + labs(y = "Average Yearly Revenue ($ 10 Billion)", x = "")
ggplot(m_tax_dist, aes(x=variable, y=(value/1000000000)/20, fill=variable)) +
stat_summary(fun.data = calc_boxplot_stat, geom="boxplot") + theme_bw() +
facet_wrap(~country, scales="free", ncol = 1 , nrow = 2)  + labs(y = "Average Yearly Revenue ($ 10 Billion)", x = "") +
theme(legend.position= "bottom", legend.text=element_text(size=11), legend.title =element_text(size=12),
axis.text=element_text(size=11),
axis.title =element_text(size=12),  plot.margin = unit(c(0.3,1,0,1), "cm"),
legend.spacing.x = unit(0.3, 'cm'), axis.ticks.x = element_blank(),
strip.text.x = element_text(size = 11, colour = "black", face="bold")) +
scale_y_continuous(expand = c(0,0)) +
scale_x_discrete(labels= c("FT", "ST (HR)",
"ST (MR)", "ST (LR)",
"DT (1Rd)",
"DT (2Rd)",
"DT (3Rd)",
"DT (4Rd)",
"DT (5Rd)",
"DT (6Rd)")) + guides(fill = "none")
ggplot(m_tax_dist, aes(x=variable, y=(value/1000000000)/20, fill=variable)) +
stat_summary(fun.data = calc_boxplot_stat, geom="boxplot") + theme_bw() +
facet_wrap(~country, scales="free", ncol = 1 , nrow = 2)  + labs(y = "Average Yearly Revenue ($ 10 Billion)", x = "") +
ggplot(m_tax_dist, aes(x=variable, y=(value/1000000000)/20, fill=variable)) +
stat_summary(fun.data = calc_boxplot_stat, geom="boxplot") + theme_bw() +
facet_wrap(~country, scales="free", ncol = 1 , nrow = 2)  + labs(y = "Average Yearly Revenue ($ 10 Billion)", x = "")
ggplot(m_tax_dist, aes(x=variable, y=(value/1000000000)/20, fill=variable)) +
stat_summary(fun.data = calc_boxplot_stat, geom="boxplot") + theme_bw() +
facet_wrap(~country, scales="free", ncol = 1 , nrow = 2)  + labs(y = "Average Yearly Revenue ($ 10 Billion)", x = "")
ggplot(m_tax_dist, aes(x=variable, y=(value/1000000000)/20, fill=variable)) +
stat_summary(fun.data = calc_boxplot_stat, geom="boxplot") + theme_bw() +
facet_wrap(~country, scales="free", ncol = 1 , nrow = 2)  + labs(y = "Average Yearly Revenue ($ 10 Billion)", x = "") +
theme(legend.position= "bottom", legend.text=element_text(size=11), legend.title =element_text(size=12),
axis.text=element_text(size=11),
axis.title =element_text(size=12),  plot.margin = unit(c(0.3,1,0,1), "cm"),
legend.spacing.x = unit(0.3, 'cm'), axis.ticks.x = element_blank(),
strip.text.x = element_text(size = 11, colour = "black", face="bold"))
ggplot(m_tax_dist, aes(x=variable, y=(value/1000000000)/20, fill=variable)) +
stat_summary(fun.data = calc_boxplot_stat, geom="boxplot") + theme_bw() +
facet_wrap(~country, scales="free", ncol = 1 , nrow = 2)  + labs(y = "Average Yearly Revenue ($ 10 Billion)", x = "") +
theme(legend.position= "bottom", legend.text=element_text(size=11), legend.title =element_text(size=12),
axis.text=element_text(size=11),
axis.title =element_text(size=12),  plot.margin = unit(c(0.3,1,0,1), "cm"),
legend.spacing.x = unit(0.3, 'cm'), axis.ticks.x = element_blank(),
strip.text.x = element_text(size = 11, colour = "black", face="bold")) +
scale_x_discrete(labels= c("FT", "ST (HR)",
"ST (MR)", "ST (LR)",
"DT (1Rd)",
"DT (2Rd)",
"DT (3Rd)",
"DT (4Rd)",
"DT (5Rd)",
"DT (6Rd)")) + guides(fill = "none")
tax_dist_average <- tax_data
for(i in seq(1, 20, 2)) {
tax_dist_average <- cbind(tax_dist_average, rowSums(tax_dist_average[,c(i,i+1)]))
}
colnames(tax_dist_average)[21:30] <- c("FT", "ST_HR", "ST_MR", "ST_LR", "DT_1", "DT_2", "DT_3", "DT_4", "DT_5", "DT_6")
m_tax_dist_average <- melt(tax_dist_average, measure.vars = colnames(tax_dist_average))
m_tax_dist_average$country <- c(rep(c("HIC", "LMIC"), each = 1000, times = 10), rep("Global", 10000))
#Box Plot
country_box_tax <- ggplot(m_tax_dist_average, aes(x=country, y=(value/1000000000)/20, fill = country)) + coord_cartesian(ylim=c(0, 10)) +
geom_boxplot(outlier.shape = NA, show.legend = FALSE) + theme_bw() + labs(y = "Average Yearly Revenue ($ Billion)", x = "") +
theme(legend.position= "bottom", legend.text=element_text(size=11), legend.title =element_text(size=12),
axis.text=element_text(size=11),
axis.title =element_text(size=12),  plot.margin = unit(c(0.3,1,0,1), "cm"),
legend.spacing.x = unit(0.3, 'cm'), axis.ticks.x = element_blank(),
strip.text.x = element_text(size = 11, colour = "black", face="bold"))
country_box_tax
ggplot(m_tax_dist_average, aes(x=country, y=(value/1000000000)/20, fill = country)) + coord_cartesian(ylim=c(0, 1)) +
geom_boxplot(outlier.shape = NA, show.legend = FALSE) + theme_bw() + labs(y = "Average Yearly Revenue ($ Billion)", x = "") +
theme(legend.position= "bottom", legend.text=element_text(size=11), legend.title =element_text(size=12),
axis.text=element_text(size=11),
axis.title =element_text(size=12),  plot.margin = unit(c(0.3,1,0,1), "cm"),
legend.spacing.x = unit(0.3, 'cm'), axis.ticks.x = element_blank(),
strip.text.x = element_text(size = 11, colour = "black", face="bold"))
tax_dist_average <- tax_data
for(i in seq(1, 20, 2)) {
tax_dist_average <- cbind(tax_dist_average, rowSums(tax_dist_average[,c(i,i+1)]))
}
colnames(tax_dist_average)[21:30] <- c("FT", "ST_HR", "ST_MR", "ST_LR", "DT_1", "DT_2", "DT_3", "DT_4", "DT_5", "DT_6")
m_tax_dist_average <- melt(tax_dist_average, measure.vars = colnames(tax_dist_average))
m_tax_dist_average$country <- c(rep(c("HIC", "LMIC"), each = 1000, times = 10), rep("Global", 10000))
#Box Plot
country_box_tax <- ggplot(m_tax_dist_average, aes(x=country, y=(value/1000000000)/20, fill = country)) + coord_cartesian(ylim=c(0, 0.5)) +
geom_boxplot(outlier.shape = NA, show.legend = FALSE) + theme_bw() + labs(y = "Average Yearly Revenue ($ Billion)", x = "") +
theme(legend.position= "bottom", legend.text=element_text(size=11), legend.title =element_text(size=12),
axis.text=element_text(size=11),
axis.title =element_text(size=12),  plot.margin = unit(c(0.3,1,0,1), "cm"),
legend.spacing.x = unit(0.3, 'cm'), axis.ticks.x = element_blank(),
strip.text.x = element_text(size = 11, colour = "black", face="bold"))
country_box_tax
library("deSolve"); library("ggplot2"); library("reshape2"); library("ggpubr"); library("rootSolve"); library("viridis"); library("cowplot")
rm(list=ls())
# Import in Dataset -------------------------------------------------------
tax_data <- readRDS("/Users/amorgan/Documents/PostDoc/Diff_Tax_Analysis/Theoretical_Analysis/Interpolat_Diff_Tax/Money_Analysis/taxlist_v1_tax.RDS")
# Resistance --------------------------------------------------------------
tax_dist <- tax_data
m_tax_dist <- melt(tax_dist, measure.vars = colnames(tax_dist))
m_tax_dist$country <- rep(c("HIC", "LMIC"), each = 1000, times = 10)
test_stat <- pairwise.wilcox.test(m_tax_dist$value, m_tax_dist$variable,
p.adjust.method = "bonferroni")
# Faceted Box Plot --------------------------------------------------------
#Need this function to be able to limit the axis when faceting (due to the outliers)
calc_boxplot_stat <- function(x) {
coef <- 1.5
n <- sum(!is.na(x))
# calculate quantiles
stats <- quantile(x, probs = c(0.0, 0.25, 0.5, 0.75, 1.0))
names(stats) <- c("ymin", "lower", "middle", "upper", "ymax")
iqr <- diff(stats[c(2, 4)])
# set whiskers
outliers <- x < (stats[2] - coef * iqr) | x > (stats[4] + coef * iqr)
if (any(outliers)) {
stats[c(1, 5)] <- range(c(stats[2:4], x[!outliers]), na.rm = TRUE)
}
return(stats)
}
#Box Plot
box_tax <- ggplot(m_tax_dist, aes(x=variable, y=(value/1000000000)/20, fill=variable)) +
stat_summary(fun.data = calc_boxplot_stat, geom="boxplot") + theme_bw() +
facet_wrap(~country, scales="free", ncol = 1 , nrow = 2)  + labs(y = "Average Yearly Revenue ($ Billion)", x = "") +
theme(legend.position= "bottom", legend.text=element_text(size=11), legend.title =element_text(size=12),
axis.text=element_text(size=11),
axis.title =element_text(size=12),  plot.margin = unit(c(0.3,1,0,1), "cm"),
legend.spacing.x = unit(0.3, 'cm'), axis.ticks.x = element_blank(),
strip.text.x = element_text(size = 11, colour = "black", face="bold")) +
scale_x_discrete(labels= c("FT", "ST (HR)",
"ST (MR)", "ST (LR)",
"DT (1Rd)",
"DT (2Rd)",
"DT (3Rd)",
"DT (4Rd)",
"DT (5Rd)",
"DT (6Rd)")) + guides(fill = "none")
# Average Box Plot --------------------------------------------------------
tax_dist_average <- tax_data
for(i in seq(1, 20, 2)) {
tax_dist_average <- cbind(tax_dist_average, rowSums(tax_dist_average[,c(i,i+1)]))
}
colnames(tax_dist_average)[21:30] <- c("FT", "ST_HR", "ST_MR", "ST_LR", "DT_1", "DT_2", "DT_3", "DT_4", "DT_5", "DT_6")
m_tax_dist_average <- melt(tax_dist_average, measure.vars = colnames(tax_dist_average))
m_tax_dist_average$country <- c(rep(c("HIC", "LMIC"), each = 1000, times = 10), rep("Global", 10000))
#Box Plot
country_box_tax <- ggplot(m_tax_dist_average, aes(x=country, y=(value/1000000000)/20, fill = country)) + coord_cartesian(ylim=c(0, 0.5)) +
geom_boxplot(outlier.shape = NA, show.legend = FALSE) + theme_bw() + labs(y = "Average Yearly Revenue ($ Billion)", x = "") +
theme(legend.position= "bottom", legend.text=element_text(size=11), legend.title =element_text(size=12),
axis.text=element_text(size=11),
axis.title =element_text(size=12),  plot.margin = unit(c(0.3,1,0,1), "cm"),
legend.spacing.x = unit(0.3, 'cm'), axis.ticks.x = element_blank(),
strip.text.x = element_text(size = 11, colour = "black", face="bold"))
# Output -----------------------------------------------------------------
tax_plot <- ggarrange(country_box_tax, box_tax, nrow = 1, ncol = 2, widths = c(0.4, 1), labels = c("A", "B"),
font.label = list(size = 18, color = "black", face = "bold"))
tax_plot
tax_data <- readRDS("/Users/amorgan/Documents/PostDoc/Diff_Tax_Analysis/Theoretical_Analysis/Interpolat_Diff_Tax/Money_Analysis/taxlist_v1_tax75.RDS")
# Resistance --------------------------------------------------------------
tax_dist <- tax_data
m_tax_dist <- melt(tax_dist, measure.vars = colnames(tax_dist))
m_tax_dist$country <- rep(c("HIC", "LMIC"), each = 1000, times = 10)
test_stat <- pairwise.wilcox.test(m_tax_dist$value, m_tax_dist$variable,
p.adjust.method = "bonferroni")
# Faceted Box Plot --------------------------------------------------------
#Need this function to be able to limit the axis when faceting (due to the outliers)
calc_boxplot_stat <- function(x) {
coef <- 1.5
n <- sum(!is.na(x))
# calculate quantiles
stats <- quantile(x, probs = c(0.0, 0.25, 0.5, 0.75, 1.0))
names(stats) <- c("ymin", "lower", "middle", "upper", "ymax")
iqr <- diff(stats[c(2, 4)])
# set whiskers
outliers <- x < (stats[2] - coef * iqr) | x > (stats[4] + coef * iqr)
if (any(outliers)) {
stats[c(1, 5)] <- range(c(stats[2:4], x[!outliers]), na.rm = TRUE)
}
return(stats)
}
#Box Plot
box_tax <- ggplot(m_tax_dist, aes(x=variable, y=(value/1000000000)/20, fill=variable)) +
stat_summary(fun.data = calc_boxplot_stat, geom="boxplot") + theme_bw() +
facet_wrap(~country, scales="free", ncol = 1 , nrow = 2)  + labs(y = "Average Yearly Revenue ($ Billion)", x = "") +
theme(legend.position= "bottom", legend.text=element_text(size=11), legend.title =element_text(size=12),
axis.text=element_text(size=11),
axis.title =element_text(size=12),  plot.margin = unit(c(0.3,1,0,1), "cm"),
legend.spacing.x = unit(0.3, 'cm'), axis.ticks.x = element_blank(),
strip.text.x = element_text(size = 11, colour = "black", face="bold")) +
scale_x_discrete(labels= c("FT", "ST (HR)",
"ST (MR)", "ST (LR)",
"DT (1Rd)",
"DT (2Rd)",
"DT (3Rd)",
"DT (4Rd)",
"DT (5Rd)",
"DT (6Rd)")) + guides(fill = "none")
# Average Box Plot --------------------------------------------------------
tax_dist_average <- tax_data
for(i in seq(1, 20, 2)) {
tax_dist_average <- cbind(tax_dist_average, rowSums(tax_dist_average[,c(i,i+1)]))
}
colnames(tax_dist_average)[21:30] <- c("FT", "ST_HR", "ST_MR", "ST_LR", "DT_1", "DT_2", "DT_3", "DT_4", "DT_5", "DT_6")
m_tax_dist_average <- melt(tax_dist_average, measure.vars = colnames(tax_dist_average))
m_tax_dist_average$country <- c(rep(c("HIC", "LMIC"), each = 1000, times = 10), rep("Global", 10000))
#Box Plot
country_box_tax <- ggplot(m_tax_dist_average, aes(x=country, y=(value/1000000000)/20, fill = country)) + coord_cartesian(ylim=c(0, 0.5)) +
geom_boxplot(outlier.shape = NA, show.legend = FALSE) + theme_bw() + labs(y = "Average Yearly Revenue ($ Billion)", x = "") +
theme(legend.position= "bottom", legend.text=element_text(size=11), legend.title =element_text(size=12),
axis.text=element_text(size=11),
axis.title =element_text(size=12),  plot.margin = unit(c(0.3,1,0,1), "cm"),
legend.spacing.x = unit(0.3, 'cm'), axis.ticks.x = element_blank(),
strip.text.x = element_text(size = 11, colour = "black", face="bold"))
# Output -----------------------------------------------------------------
tax_plot <- ggarrange(country_box_tax, box_tax, nrow = 1, ncol = 2, widths = c(0.4, 1), labels = c("A", "B"),
font.label = list(size = 18, color = "black", face = "bold"))
tax_plot
tax_data <- readRDS("/Users/amorgan/Documents/PostDoc/Diff_Tax_Analysis/Theoretical_Analysis/Interpolat_Diff_Tax/Money_Analysis/taxlist_v1_tax25.RDS")
# Resistance --------------------------------------------------------------
tax_dist <- tax_data
m_tax_dist <- melt(tax_dist, measure.vars = colnames(tax_dist))
m_tax_dist$country <- rep(c("HIC", "LMIC"), each = 1000, times = 10)
test_stat <- pairwise.wilcox.test(m_tax_dist$value, m_tax_dist$variable,
p.adjust.method = "bonferroni")
# Faceted Box Plot --------------------------------------------------------
#Need this function to be able to limit the axis when faceting (due to the outliers)
calc_boxplot_stat <- function(x) {
coef <- 1.5
n <- sum(!is.na(x))
# calculate quantiles
stats <- quantile(x, probs = c(0.0, 0.25, 0.5, 0.75, 1.0))
names(stats) <- c("ymin", "lower", "middle", "upper", "ymax")
iqr <- diff(stats[c(2, 4)])
# set whiskers
outliers <- x < (stats[2] - coef * iqr) | x > (stats[4] + coef * iqr)
if (any(outliers)) {
stats[c(1, 5)] <- range(c(stats[2:4], x[!outliers]), na.rm = TRUE)
}
return(stats)
}
#Box Plot
box_tax <- ggplot(m_tax_dist, aes(x=variable, y=(value/1000000000)/20, fill=variable)) +
stat_summary(fun.data = calc_boxplot_stat, geom="boxplot") + theme_bw() +
facet_wrap(~country, scales="free", ncol = 1 , nrow = 2)  + labs(y = "Average Yearly Revenue ($ Billion)", x = "") +
theme(legend.position= "bottom", legend.text=element_text(size=11), legend.title =element_text(size=12),
axis.text=element_text(size=11),
axis.title =element_text(size=12),  plot.margin = unit(c(0.3,1,0,1), "cm"),
legend.spacing.x = unit(0.3, 'cm'), axis.ticks.x = element_blank(),
strip.text.x = element_text(size = 11, colour = "black", face="bold")) +
scale_x_discrete(labels= c("FT", "ST (HR)",
"ST (MR)", "ST (LR)",
"DT (1Rd)",
"DT (2Rd)",
"DT (3Rd)",
"DT (4Rd)",
"DT (5Rd)",
"DT (6Rd)")) + guides(fill = "none")
# Average Box Plot --------------------------------------------------------
tax_dist_average <- tax_data
for(i in seq(1, 20, 2)) {
tax_dist_average <- cbind(tax_dist_average, rowSums(tax_dist_average[,c(i,i+1)]))
}
colnames(tax_dist_average)[21:30] <- c("FT", "ST_HR", "ST_MR", "ST_LR", "DT_1", "DT_2", "DT_3", "DT_4", "DT_5", "DT_6")
m_tax_dist_average <- melt(tax_dist_average, measure.vars = colnames(tax_dist_average))
m_tax_dist_average$country <- c(rep(c("HIC", "LMIC"), each = 1000, times = 10), rep("Global", 10000))
#Box Plot
country_box_tax <- ggplot(m_tax_dist_average, aes(x=country, y=(value/1000000000)/20, fill = country)) + coord_cartesian(ylim=c(0, 0.5)) +
geom_boxplot(outlier.shape = NA, show.legend = FALSE) + theme_bw() + labs(y = "Average Yearly Revenue ($ Billion)", x = "") +
theme(legend.position= "bottom", legend.text=element_text(size=11), legend.title =element_text(size=12),
axis.text=element_text(size=11),
axis.title =element_text(size=12),  plot.margin = unit(c(0.3,1,0,1), "cm"),
legend.spacing.x = unit(0.3, 'cm'), axis.ticks.x = element_blank(),
strip.text.x = element_text(size = 11, colour = "black", face="bold"))
# Output -----------------------------------------------------------------
tax_plot <- ggarrange(country_box_tax, box_tax, nrow = 1, ncol = 2, widths = c(0.4, 1), labels = c("A", "B"),
font.label = list(size = 18, color = "black", face = "bold"))
tax_plot
